''' –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –¥–µ–≤—É—à–∫–∏:
–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å id –¥–µ–≤—É—à–∫–∏, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –æ–Ω–∞ –º–æ–≥–ª–∞ —Ç—É–¥–∞ –ø–∏—Å–∞—Ç—å
–¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π (—Å–¥–µ–ª–∞—é —É—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ start) '''

import telebot
from telebot import types
import sqlite3
from datetime import datetime

token = '6247864968:AAHlRTVqb20mXsm9S4QKYqNGqq-XibetJsw'
bot = telebot.TeleBot(token)

name_dream = None
prise = None


@bot.message_handler(commands=['start'])
def start(message):
    db = sqlite3.connect('Dream.db')
    cursor = db.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS dreams(
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name VARCHAR,
        prise DECIMAL,
        period VARCHAR,
        data DATE
    )""")
    db.commit()
    cursor.close()
    db.close()
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ì–æ—Ç–æ–≤–∞', callback_data='Ready'))
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç, –õ—é–±–∏–º–∞—è! –Ø <b>–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Ç–≤–æ—Ö –º–µ—á—Ç–∞–Ω–∏–π</b> ü•∞ –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å, —á–µ–≥–æ —Ç—ã –∂–µ–ª–∞–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –≤ –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –Ø –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è –∏ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª–Ω—è—Ç—å –∏—Ö, <b>–Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –ø–∏—Å–∞—Ç—å</b>, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å!',
                     reply_markup=markup, parse_mode='html')


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == 'Ready':
        bot.send_message(call.message.chat.id,
                         '–ù–∞–ø–∏—à–∏ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b> —Ç–æ–≥–æ, —á–µ–≥–æ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å. –ú–æ–∂–µ—à—å —Ä–∞—Å–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ, —á—Ç–æ–±—ã –±—ã–ª–æ –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ üòã',
                         parse_mode='html')
    elif call.data == 'Continue':
        bot.send_message(call.message.chat.id,
                         '–ù–∞–ø–∏—à–∏ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b> —Ç–æ–≥–æ, —á–µ–≥–æ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å. –ú–æ–∂–µ—à—å —Ä–∞—Å–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ, —á—Ç–æ–±—ã –±—ã–ª–æ –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ üòã',
                         parse_mode='html')
    elif call.data == 'Basket':
        db = sqlite3.connect('Dream.db')
        cursor = db.cursor()
        cursor.execute("SELECT * FROM dreams")
        list_dreams = cursor.fetchall()
        s = ''
        if len(list_dreams) != 0:
            for i in list_dreams:
                s += f'{i[0]}) {i[1]} - {i[2]} - {i[3]}\n'
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='Continue'))
            markup.add(types.InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ', callback_data='Delete'))
            bot.send_message(call.message.chat.id, s, reply_markup=markup)
        else:
            s = '<b>–°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –ø—É—Å—Ç</b>'
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='Continue'))
            bot.send_message(call.message.chat.id, s, reply_markup=markup, parse_mode='html')
        cursor.close()
        db.close()
    elif call.data == "Delete":
        bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏ <b>—Ü–∏—Ñ—Ä—É</b>, –ø–æ–¥ –∫–æ—Ç–æ—Ä–æ–π –∂–µ–ª–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å üëá',
                         parse_mode='html')
        bot.register_next_step_handler(call.message, set_digit)


@bot.message_handler(content_types=['text'])
def name(message):
    global name_dream
    name_dream = message.text
    db = sqlite3.connect('Dream.db')
    cursor = db.cursor()
    cursor.execute(f"INSERT INTO dreams(name) VALUES('{name_dream}')")
    db.commit()
    cursor.close()
    db.close()
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å</b> –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–µ—â–∏ –∏–ª–∏ —É—Å–ª—É–≥–∏üí∞', parse_mode='html')
    bot.register_next_step_handler(message, set_period)


def set_period(message):
    global prise
    prise = message.text
    db = sqlite3.connect('Dream.db')
    cursor = db.cursor()
    cursor.execute(f"UPDATE dreams SET prise = '{prise}' WHERE name = '{name_dream}'")
    db.commit()
    cursor.close()
    db.close()
    bot.send_message(message.chat.id,
                     '–ù–∞–ø–∏—à–∏ <b>–ø–µ—Ä–∏–æ–¥</b>, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–µ—â—å –∏–ª–∏ —É—Å–ª—É–≥—É ‚è≥',
                     parse_mode='html')
    bot.register_next_step_handler(message, get_period)


def get_period(message):
    period = message.text
    db = sqlite3.connect('Dream.db')
    cursor = db.cursor()
    cursor.execute(f"UPDATE dreams SET period = '{period}' WHERE name = '{name_dream}'")
    db.commit()
    cursor.execute(f"UPDATE dreams SET data = '{datetime.now()}' WHERE name = '{name_dream}'")
    db.commit()
    cursor.close()
    db.close()
    markup = types.InlineKeyboardMarkup()
    bt_1 = types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='Continue')
    markup.add(bt_1)
    bt_2 = types.InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π', callback_data='Basket')
    markup.add(bt_2)
    bot.send_message(message.chat.id,
                     f'–°—É–ø–µ—Ä! –ú–µ—á—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞! ü§© <b>–ñ–µ–ª–∞–Ω–∏—è</b>: {name_dream}\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {prise}\n–ü–µ—Ä–∏–æ–¥: {period}\n–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å –Ω–æ–≤—ã–º–∏ –∂–µ–ª–∞–Ω–∏—è–º–∏ üòç',
                     reply_markup=markup, parse_mode='html')


def set_digit(message):
    digit = message.text
    db = sqlite3.connect('Dream.db')
    cursor = db.cursor()
    cursor.execute(f"SELECT name FROM dreams WHERE id = '{digit}'")
    f = cursor.fetchone()
    cursor.execute(f"DELETE FROM dreams WHERE id = '{digit}'")
    db.commit()
    cursor.execute(f"UPDATE dreams Set id = id - 1 WHERE id > '{digit}'")
    db.commit()
    cursor.execute("UPDATE SQLITE_SEQUENCE SET seq = 0")
    db.commit()
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='Continue'))
    markup.add(types.InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π', callback_data='Basket'))
    bot.send_message(message.chat.id, f'–ú–µ—á—Ç–∞ - <b>{f[0]}</b> - –∏—Å–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ', reply_markup=markup, parse_mode='html')


bot.infinity_polling()
